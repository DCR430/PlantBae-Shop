{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Card, DisplayText, Form, FormLayout, Layout, Page, PageActions, TextField, Banner, Frame, Toast } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport React from 'React';\nconst UPDATE_PRICE = gql`\n  mutation productVariantUpdate($input: ProductVariantInput!) {\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }\n`;\n\nclass EditProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      discount: '',\n      price: '',\n      variantId: '',\n      showToast: false\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"itemToBeConsumed\", () => {\n      const item = store.get('item');\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.1;\n      this.setState({\n        price,\n        variantId\n      });\n      return (price - discounter).toFixed(2);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      discount: this.itemToBeConsumed()\n    });\n  }\n\n  render() {\n    const {\n      name,\n      price,\n      discount,\n      variantId\n    } = this.state;\n    return /*#__PURE__*/_jsx(Mutation, {\n      mutation: UPDATE_PRICE,\n      children: (handleSubmit, {\n        error,\n        data\n      }) => {\n        const showError = error && /*#__PURE__*/_jsx(Banner, {\n          status: \"critical\",\n          children: error.message\n        });\n\n        const showToast = data && data.productVariantUpdate && /*#__PURE__*/_jsx(Toast, {\n          content: \"Sucessfully updated\",\n          onDismiss: () => this.setState({\n            showToast: false\n          })\n        });\n\n        return /*#__PURE__*/_jsx(Frame, {\n          children: /*#__PURE__*/_jsx(Page, {\n            children: /*#__PURE__*/_jsxs(Layout, {\n              children: [showToast, /*#__PURE__*/_jsx(Layout.Section, {\n                children: showError\n              }), /*#__PURE__*/_jsxs(Layout.Section, {\n                children: [/*#__PURE__*/_jsx(DisplayText, {\n                  size: \"large\",\n                  children: name\n                }), /*#__PURE__*/_jsxs(Form, {\n                  children: [/*#__PURE__*/_jsx(Card, {\n                    sectioned: true,\n                    children: /*#__PURE__*/_jsxs(FormLayout, {\n                      children: [/*#__PURE__*/_jsxs(FormLayout.Group, {\n                        children: [/*#__PURE__*/_jsx(TextField, {\n                          prefix: \"$\",\n                          value: price,\n                          disabled: true,\n                          label: \"Original price\",\n                          type: \"price\"\n                        }), /*#__PURE__*/_jsx(TextField, {\n                          prefix: \"$\",\n                          value: discount,\n                          onChange: this.handleChange('discount'),\n                          label: \"Discounted price\",\n                          type: \"discount\"\n                        })]\n                      }), /*#__PURE__*/_jsx(\"p\", {\n                        children: \"This sale price will expire in two weeks\"\n                      })]\n                    })\n                  }), /*#__PURE__*/_jsx(PageActions, {\n                    primaryAction: [{\n                      content: 'Save',\n                      onAction: () => {\n                        const productVariableInput = {\n                          id: variantId,\n                          price: discount\n                        };\n                        handleSubmit({\n                          variables: {\n                            input: productVariableInput\n                          }\n                        });\n                      }\n                    }],\n                    secondaryActions: [{\n                      content: 'Remove discount'\n                    }]\n                  })]\n                })]\n              })]\n            })\n          })\n        });\n      }\n    });\n  }\n\n}\n\nexport default EditProduct;","map":{"version":3,"sources":["/Users/danielreyes/Development/code/PlantBaeShop/pages/edit-products.js"],"names":["Card","DisplayText","Form","FormLayout","Layout","Page","PageActions","TextField","Banner","Frame","Toast","store","gql","Mutation","React","UPDATE_PRICE","EditProduct","Component","discount","price","variantId","showToast","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","componentDidMount","itemToBeConsumed","render","name","state","handleSubmit","error","data","showError","message","productVariantUpdate","handleChange","content","onAction","productVariableInput","variables","input"],"mappings":"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","sourcesContent":["import {\n    Card,\n    DisplayText,\n    Form,\n    FormLayout,\n    Layout,\n    Page,\n    PageActions,\n    TextField,\n    Banner,\n    Frame,\n    Toast,\n  } from '@shopify/polaris';\n  import store from 'store-js';\n  import gql from 'graphql-tag';\n  import { Mutation } from 'react-apollo';\n  import React from 'React'\n  \n  const UPDATE_PRICE = gql`\n  mutation productVariantUpdate($input: ProductVariantInput!) {\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }\n`;\n\n\n\n  class EditProduct extends React.Component {\n    state = {\n      discount: '',\n      price: '',\n      variantId: '',\n      showToast: false,\n    };\n  \n    componentDidMount() {\n      this.setState({ discount: this.itemToBeConsumed() });\n    }\n  \n    render() {\n      const { name, price, discount, variantId } = this.state;\n      return (\n        <Mutation\n          mutation={UPDATE_PRICE}\n        >\n          {(handleSubmit, {error, data}) => {\n              const showError = error && (\n                <Banner status=\"critical\">{error.message}</Banner>\n              );\n              const showToast = data && data.productVariantUpdate && (\n                <Toast\n                  content=\"Sucessfully updated\"\n                  onDismiss={() => this.setState({ showToast: false })}\n                />\n              );\n  \n      return (\n          <Frame>\n        <Page>\n          <Layout>\n          {showToast}\n                  <Layout.Section>\n                    {showError}\n                  </Layout.Section>\n            <Layout.Section>\n              <DisplayText size=\"large\">{name}</DisplayText>\n              <Form>\n                <Card sectioned>\n                  <FormLayout>\n                    <FormLayout.Group>\n                      <TextField\n                        prefix=\"$\"\n                        value={price}\n                        disabled={true}\n                        label=\"Original price\"\n                        type=\"price\"\n                      />\n                      <TextField\n                        prefix=\"$\"\n                        value={discount}\n                        onChange={this.handleChange('discount')}\n                        label=\"Discounted price\"\n                        type=\"discount\"\n                      />\n                    </FormLayout.Group>\n                    <p>\n                      This sale price will expire in two weeks\n                    </p>\n                  </FormLayout>\n                </Card>\n                <PageActions\n                  primaryAction={[\n                    {\n                      content: 'Save',\n                      onAction: () => {\n                        const productVariableInput = {\n                            id: variantId,\n                            price: discount,\n                          };\n                          handleSubmit({\n                            variables: { input: productVariableInput },\n                           });\n                      }\n                    }\n                  ]}\n                  secondaryActions={[\n                    {\n                      content: 'Remove discount'\n                    }\n                  ]}\n                />\n              </Form>\n            </Layout.Section>\n          </Layout>\n        </Page>\n        </Frame>\n      );\n                }}\n      </Mutation>\n      )\n    }\n  \n    handleChange = (field) => {\n      return (value) => this.setState({ [field]: value });\n    };\n  \n    itemToBeConsumed = () => {\n      const item = store.get('item');\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.1;\n      this.setState({ price, variantId });\n      return (price - discounter).toFixed(2);\n    };\n  }\n  \n  export default EditProduct;"]},"metadata":{},"sourceType":"module"}