{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'React';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport * as PropTypes from 'prop-types';\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    };\n\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return /*#__PURE__*/_jsx(Query, {\n      query: GET_PRODUCTS_BY_ID,\n      variables: {\n        ids: store.get('ids')\n      },\n      children: ({\n        data,\n        loading,\n        error\n      }) => {\n        if (loading) {\n          return /*#__PURE__*/_jsx(\"div\", {\n            children: \"Loading\\u2026\"\n          });\n        }\n\n        if (error) {\n          return /*#__PURE__*/_jsx(\"div\", {\n            children: error.message\n          });\n        }\n\n        console.log(data);\n        return /*#__PURE__*/_jsx(Card, {\n          children: /*#__PURE__*/_jsx(ResourceList, {\n            showHeader: true,\n            resourceName: {\n              singular: 'Product',\n              plural: 'Products'\n            },\n            items: data.nodes,\n            renderItem: item => {\n              const media = /*#__PURE__*/_jsx(Thumbnail, {\n                source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n                alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n              });\n\n              const price = item.variants.edges[0].node.price;\n              return /*#__PURE__*/_jsx(ResourceList.Item, {\n                id: item.id,\n                media: media,\n                accessibilityLabel: `View details for ${item.title}`,\n                onClick: () => {\n                  store.set('item', item);\n                  redirectToProduct();\n                },\n                children: /*#__PURE__*/_jsxs(Stack, {\n                  children: [/*#__PURE__*/_jsx(Stack.Item, {\n                    fill: true,\n                    children: /*#__PURE__*/_jsx(\"h3\", {\n                      children: /*#__PURE__*/_jsx(TextStyle, {\n                        variation: \"strong\",\n                        children: item.title\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Stack.Item, {\n                    children: /*#__PURE__*/_jsxs(\"p\", {\n                      children: [\"$\", price]\n                    })\n                  }), /*#__PURE__*/_jsx(Stack.Item, {\n                    children: /*#__PURE__*/_jsxs(\"p\", {\n                      children: [\"Expires on \", twoWeeksFromNow, \" \"]\n                    })\n                  })]\n                })\n              });\n            }\n          })\n        });\n      }\n    });\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/danielreyes/Development/code/PlantBaeShop/components/ResourceList.js"],"names":["React","gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","PropTypes","GET_PRODUCTS_BY_ID","ResourceListWithProducts","Component","render","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","twoWeeksFromNow","Date","now","toDateString","ids","get","data","loading","error","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title","set"],"mappings":"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","sourcesContent":["\nimport React from 'React'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {\n  Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nimport * as PropTypes from 'prop-types';\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  static contextType = Context;\n\n  render() {\n    const app = this.context;\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(\n        Redirect.Action.APP,\n        '/edit-products',\n      );\n    };\n\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return (\n      <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n        {({ data, loading, error }) => {\n          if (loading) { return <div>Loadingâ€¦</div>; }\n          if (error) { return <div>{error.message}</div>; }\n          console.log(data);\n          return (\n            <Card>\n              <ResourceList\n                showHeader\n                resourceName={{ singular: 'Product', plural: 'Products' }}\n                items={data.nodes}\n                renderItem={(item) => {\n                  const media = (\n                    <Thumbnail\n                      source={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.originalSrc\n                          : ''\n                      }\n                      alt={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.altText\n                          : ''\n                      }\n                    />\n                  );\n                  const price = item.variants.edges[0].node.price;\n                  return (\n                    <ResourceList.Item\n                      id={item.id}\n                      media={media}\n                      accessibilityLabel={`View details for ${item.title}`}\n                      onClick={() => {\n                        store.set('item', item);\n                        redirectToProduct();\n                      }\n                      }\n                    >\n                      <Stack>\n                        <Stack.Item fill>\n                          <h3>\n                            <TextStyle variation=\"strong\">\n                              {item.title}\n                            </TextStyle>\n                          </h3>\n                        </Stack.Item>\n                        <Stack.Item>\n                          <p>${price}</p>\n                        </Stack.Item>\n                        <Stack.Item>\n                          <p>Expires on {twoWeeksFromNow} </p>\n                        </Stack.Item>\n                      </Stack>\n                    </ResourceList.Item>\n                  );\n                }}\n              />\n            </Card>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default ResourceListWithProducts;\n"]},"metadata":{},"sourceType":"module"}